{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","selectedGoods","onMouseClickRemove","event","parentLi","currentTarget","closest","classList","remove","text","childNodes","nodeValue","forEach","item","i","splice","setState","this","goodsToShow","slicedWord","slice","join","word","length","className","type","onClick","goodsFromServer","map","product","includes","push","Component","ReactDOM","render","document","getElementById"],"mappings":"sNAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCEWA,EAAb,4MACEC,MAAyB,CACvBC,aAAc,MACdC,cAAe,CAAC,QAHpB,EAMEC,mBAAqB,SAACC,GACpB,IACMC,EADgBD,EAAME,cACGC,QAAQ,MAE/B,OAARF,QAAQ,IAARA,KAAUG,UAAUC,OAAO,gBAC3B,IAAMC,EAAI,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAUM,WAAW,GAAGC,UAEjCF,GACF,EAAKV,MAAME,cAAcW,SAAQ,SAACC,EAAMC,GAClCD,IAASJ,GACX,EAAKV,MAAME,cAAcc,OAAOD,EAAG,MAKzC,EAAKE,SAAS,CACZhB,aAAc,MAtBpB,4CA0BE,WAAU,IAAD,OACP,EAAwCiB,KAAKlB,MAArCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAClBiB,EAAc,GACZC,EAAalB,EAAcmB,MAAM,GAAI,GAAGC,KAAK,MAC7CC,EAAI,UAAMH,EAAN,gBAAwBlB,EAAcA,EAAcsB,OAAS,IAUvE,OAR6B,IAAzBtB,EAAcsB,OAChBL,GAAejB,EAAc,GACK,IAAzBA,EAAcsB,OACvBL,GAAW,UAAOjB,EAAc,GAArB,gBAA+BA,EAAc,IAExDiB,GAAeI,EAIf,uBAAME,UAAU,MAAhB,UACE,yBAAQA,UAAU,wBAAlB,UACE,oBAAIA,UAAU,aAAd,SAC4B,IAAzBvB,EAAcsB,OACX,oBADH,UAEML,EAFN,YAE8C,IAAzBjB,EAAcsB,OAC9B,KACA,MAJL,eAODtB,EAAcsB,OAAS,GACvB,wBACEE,KAAK,SACLD,UAAU,8BACVE,QAAS,kBAAM,EAAKV,SAAS,CAC3BhB,aAAc,GACdC,cAAe,MALnB,sBAaJ,oBAAIuB,UAAU,uBAAd,SACGG,EAAgBC,KAAI,SAAAC,GAAO,OAC1B,qBACEL,UAAS,yBAAqBK,IAAY7B,GAAkBC,EAAc6B,SAASD,GAC/E,eACA,IAHN,UAMGA,EACA5B,EAAc6B,SAASD,GAEpB,wBACEJ,KAAK,SACLD,UAAU,gCACVE,QAAS,EAAKxB,mBAHhB,oBASA,wBACEuB,KAAK,SACLD,UAAU,iCACVE,QAAS,WACPzB,EAAc8B,KAAKF,GACnB,EAAKb,SAAS,CACZhB,aAAc6B,KANpB,sBAdCA,eAvEnB,GAAyBG,aCTzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cb3733c1.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype Product = string;\n\ntype State = {\n  selectedGood: Product,\n  selectedGoods: Product[],\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n    selectedGoods: ['Jam'],\n  };\n\n  onMouseClickRemove = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const clickedButton = event.currentTarget;\n    const parentLi = clickedButton.closest('li');\n\n    parentLi?.classList.remove('Good--active');\n    const text = parentLi?.childNodes[0].nodeValue;\n\n    if (text) {\n      this.state.selectedGoods.forEach((item, i) => {\n        if (item === text) {\n          this.state.selectedGoods.splice(i, 1);\n        }\n      });\n    }\n\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  render() {\n    const { selectedGood, selectedGoods } = this.state;\n    let goodsToShow = '';\n    const slicedWord = selectedGoods.slice(0, -1).join(', ');\n    const word = `${slicedWord} and ${selectedGoods[selectedGoods.length - 1]}`;\n\n    if (selectedGoods.length === 1) {\n      goodsToShow += selectedGoods[0];\n    } else if (selectedGoods.length === 2) {\n      goodsToShow += `${selectedGoods[0]} and ${selectedGoods[1]}`;\n    } else {\n      goodsToShow += word;\n    }\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header mt-4 mb-4\">\n          <h1 className=\"App__title\">\n            {selectedGoods.length === 0\n              ? 'No goods selected'\n              : `${goodsToShow} ${selectedGoods.length === 1\n                ? 'is'\n                : 'are'} selected`}\n          </h1>\n\n          {(selectedGoods.length > 0) && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger\"\n              onClick={() => this.setState({\n                selectedGood: '',\n                selectedGoods: [],\n              })}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul className=\"notification is-link\">\n          {goodsFromServer.map(product => (\n            <li\n              className={`pt-1 pb-1 Good ${(product === selectedGood) || (selectedGoods.includes(product))\n                ? 'Good--active'\n                : ''}`}\n              key={product}\n            >\n              {product}\n              {selectedGoods.includes(product)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"Good__remove button is-danger\"\n                    onClick={this.onMouseClickRemove}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"Good__select button is-success\"\n                    onClick={() => {\n                      selectedGoods.push(product);\n                      this.setState({\n                        selectedGood: product,\n                      });\n                    }}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}