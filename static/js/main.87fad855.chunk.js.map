{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","isSelected","searchGood","includes","removeSelectedGood","good","setState","filter","product","cleareSelectedGoods","addSelectedGood","getTitle","length","slice","join","this","className","type","onClick","goodsFromServer","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCGWA,EAAb,4MACEC,MAAyB,CACvBC,cAAe,CAAC,QAFpB,EAKEC,WAAa,SAACC,GACZ,OAAO,EAAKH,MAAMC,cAAcG,SAASD,IAN7C,EASEE,mBAAqB,SACnBC,GAEA,EAAKC,UAAS,SAACP,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcO,QAAO,SAAAC,GAAO,OAAIA,IAAYH,UAbvE,EAiBEI,oBAAsB,kBAAM,EAAKH,SAAS,CACxCN,cAAe,MAlBnB,EAqBEU,gBAAkB,SAACF,GACjB,EAAKF,UAAS,SAACP,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BQ,SAvB9C,EA2BEG,SAAW,WACT,IAAQX,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcY,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUZ,EAAc,GAAxB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBAEF,QACE,MAAM,GAAN,OAAUA,EAAca,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDd,EAAcA,EAAcY,OAAS,GAA5F,mBAxCR,4CA4CE,WAAU,IAAD,OACCZ,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,uBAAMgB,UAAU,MAAhB,UACE,yBAAQA,UAAU,wBAAlB,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKJ,aAGPX,EAAcY,OAAS,GACtB,wBACEK,KAAK,SACLD,UAAU,8BACVE,QAASH,KAAKN,oBAHhB,sBAUJ,oBAAIO,UAAU,uBAAd,SACGG,EAAgBC,KAAI,SAAAf,GAAI,OACvB,qBACEW,UACEK,IACE,OACA,OACA,OACA,CAAE,eAAgB,EAAKpB,WAAWI,KANxC,UAWE,4BACGA,IAEF,EAAKJ,WAAWI,GAEb,wBACEY,KAAK,SACLD,UAAU,gCACVE,QAAS,kBAAO,EAAKd,mBAAmBC,IAH1C,oBASA,wBACEY,KAAK,SACLD,UAAU,iCACVE,QAAS,kBAAM,EAAKR,gBAAgBL,IAHtC,sBAhBCA,eA5EnB,GAAyBiB,aCVzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.87fad855.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype Good = string;\n\ntype State = {\n  selectedGoods: Good[],\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGoods: ['Jam'],\n  };\n\n  isSelected = (searchGood: Good) => {\n    return this.state.selectedGoods.includes(searchGood);\n  };\n\n  removeSelectedGood = (\n    good: Good,\n  ) => {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter(product => product !== good),\n    }));\n  };\n\n  cleareSelectedGoods = () => this.setState({\n    selectedGoods: [],\n  });\n\n  addSelectedGood = (product: Good) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, product],\n    }));\n  };\n\n  getTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header mt-4 mb-4\">\n          <h1 className=\"App__title\">\n            {this.getTitle()}\n          </h1>\n\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger\"\n              onClick={this.cleareSelectedGoods}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul className=\"notification is-link\">\n          {goodsFromServer.map(good => (\n            <li\n              className={\n                classNames(\n                  'pt-1',\n                  'pb-1',\n                  'Good',\n                  { 'Good--active': this.isSelected(good) },\n                )\n              }\n              key={good}\n            >\n              <p>\n                {good}\n              </p>\n              {this.isSelected(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"Good__remove button is-danger\"\n                    onClick={() => (this.removeSelectedGood(good))}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"Good__select button is-success\"\n                    onClick={() => this.addSelectedGood(good)}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}